version: '3.9'

services:
  prometheus:
    build: metrics/prometheus
    ports:
      - "9090:9090"
    volumes:
      - metrics-data:/prometheus

  grafana:
    user: "472"
    image: grafana/grafana
    volumes:
      - ./metrics/grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000

  frontend:
    build:
      context: ./www
      args:
        NEXT_PUBLIC_API_BASE_URL: http://web-app:5000
    ports:
      - "8080:3000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/toro" ]
      interval: 30s
      timeout: 10s
      retries: 3
    develop:
      watch:
        - action: rebuild
          path: ./www
    depends_on:
      web-app:
        condition: service_healthy
    restart: unless-stopped

  web-app:
    build: ./
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://postgres:123456@postgres-db:5432
      PORT: 5000
      ROCKET_ADDRESS: 0.0.0.0
      RUST_LOG: info
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/api/toro" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - tmp:/app/tmp
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    image: postgres:17.0
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "work_mem=16MB"

volumes:
  grafana_data: {}
  metrics-data: {}
  postgres-data:
    driver: local
  tmp:
    driver: local

networks:
  default:
    driver: bridge
